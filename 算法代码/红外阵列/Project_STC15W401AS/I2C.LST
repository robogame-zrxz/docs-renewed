C51 COMPILER V9.59.0.0   I2C                                                               05/01/2021 11:19:50 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN I2C.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE I2C.c LARGE OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "STC15.h"
   2          #include <intrins.h>
   3          
   4          #define I2CDelay()  {_nop_();_nop_();_nop_();_nop_();}
   5          sbit I2C_SCL = P3^6;
   6          sbit I2C_SDA = P3^7;
   7          
   8          /* I2C总线写操作，dat-待写入字节，返回值-主机应答位的值 */
   9          bit I2CWrite(unsigned char dat)
  10          {
  11   1              bit ack;  //用于暂存应答位的值
  12   1          unsigned char mask;  //用于探测字节内某一位值的掩码变量
  13   1      
  14   1          for (mask=0x80; mask!=0; mask>>=1) //从高位到低位依次进行
  15   1          {
  16   2              if ((mask&dat) == 0)  //该位的值输出到SDA上
  17   2                  I2C_SDA = 0;
  18   2              else
  19   2                  I2C_SDA = 1;
  20   2              while(I2C_SCL == 0);      //等待SCL上升沿
  21   2              while(I2C_SCL == 1);      //等待SCL下降沿
  22   2          }
  23   1          I2C_SDA = 1;   //8位数据发送完后，从机释放SDA，以检测应答
  24   1          while(I2C_SCL == 0);      //等待SCL上升沿
  25   1          ack = I2C_SDA; //读取此时的SDA值，即为从机的应答值
  26   1          while(I2C_SCL == 1);      //等待SCL下降沿
  27   1      
  28   1          return (~ack); //应答值取反以符合通常的逻辑：
  29   1                         //0=不存在或忙或写入失败，1=存在且空闲或写入成功   
  30   1      }
  31          /* I2C总线读操作，并发送非应答信号，返回值-读到的字节 */
  32          unsigned char I2CReadNAK(unsigned char addr)
  33          {
  34   1          unsigned char mask;
  35   1          unsigned char dat=0;
  36   1      
  37   1          //I2C_SDA = 1;  //首先确保释放SDA
  38   1              //I2C_SCL = 1;  //首先确保释放SDA
  39   1          for (mask=0x80; mask!=0; mask>>=1) //从高位到低位依次进行
  40   1          {
  41   2              while(I2C_SCL == 0);      //等待SCL上升沿
  42   2              if(I2C_SDA == 0)  //读取SDA的值
  43   2                  dat &= ~mask; //为0时，dat中对应位清零
  44   2              else
  45   2                  dat |= mask;  //为1时，dat中对应位置1
  46   2              while(I2C_SCL == 1);      //等待SCL下降沿
  47   2          }
  48   1              if((dat>>1)==addr)I2C_SDA = 0;  //地址正确，发送应答信号
  49   1          else I2C_SDA = 1;                           //地址错误，发送非应答信号
  50   1          while(I2C_SCL == 0);      //等待SCL上升沿
  51   1          while(I2C_SCL == 1);      //等待SCL下降沿
  52   1              I2C_SDA = 1;
  53   1      
  54   1          return dat;
  55   1      }
C51 COMPILER V9.59.0.0   I2C                                                               05/01/2021 11:19:50 PAGE 2   

  56          
  57          /* 读取函数，buf-数据接收指针，addr-起始地址，len-读取长度 */
  58          /*void I2C_Read(unsigned char *buf, unsigned char addr, unsigned char len)
  59          {
  60              I2CStart();                //发送重复启动信号
  61              I2CWrite((addr<<1)|0x01);  //寻址器件，后续为读操作
  62              while (len > 1)            //连续读取len-1个字节
  63              {
  64                  *buf++ = I2CReadACK(); //最后字节之前为读取操作+应答
  65                  len--;
  66              }
  67              *buf = I2CReadNAK();       //最后一个字节为读取操作+非应答
  68              I2CStop();
  69          }*/
  70          /* 写入函数，buf-源数据指针，addr-起始地址，len-写入长度 */
  71          bit I2C_Write(unsigned char *buf, unsigned char addr, unsigned char len)
  72          {
  73   1          unsigned char I2C_SDA_new,I2C_SDA_old;
  74   1              //I2C_SDA = 1;  //首先确保释放SDA
  75   1              //I2C_SCL = 1;  //首先确保释放SCL
  76   1              I2C_SDA_new=I2C_SDA;
  77   1              do{
  78   2                      do I2C_SDA_old=I2C_SDA_new;
  79   2                      while(((I2C_SDA_new=I2C_SDA)==1)||(I2C_SDA_old==0)); //等待SDA下降沿                            
  80   2              }while(I2C_SCL==0);                               //并且SCL为高电平
  81   1              while(I2C_SCL == 1);      //等待SCL下降沿
  82   1              
  83   1              if((I2CReadNAK(addr)>>1)==addr)
  84   1              {
  85   2                      while (len > 0)
  86   2              {
  87   3                  I2CWrite(*buf++);
  88   3                              //if(I2CWrite(*buf++)==0)break;     //写入一个字节数据
  89   3                  len--;                //待写入长度计数递减
  90   3              }
  91   2                      return 1;//发送成功     
  92   2              }
  93   1              return 0;//发送失败
  94   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    362    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     12    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
